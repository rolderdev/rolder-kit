{"version":3,"file":"nodes_data_update_update_v0_1_0_js.js","sources":["./nodes/data/update/update_v0.1.0.js","./libs/kuzzle/v0.0.6/update.jsx"],"sourcesContent":["import update from '../../../libs/kuzzle/v0.0.6/update'\n\nexport default async function node(noodleNode) {\n    noodleNode.setOutputs({ isUpdating: true })\n    update(noodleNode.inputs.updateItem)\n        .then(() => {\n            noodleNode.setOutputs({ isUpdating: false })\n            noodleNode.sendSignalOnOutput('sendUpdated')\n        })\n}","import { convertOne } from './convert'\nimport ErrorHandler from '../../error-handler/v0.0.1/ErrorHandler'\nimport { classVersion, dbVersion } from '../../../utils/data/v.0.1.0/data'\nimport useData from '../../use-data/v0.1.0/use-data'\n\nconst update = async ({ className, id, body }) => {\n    const { debug, classes } = Rolder\n    const index = dbVersion()\n    const classNameV = classVersion(className)\n\n    if (debug > 0) console.time(classNameV + ' update time')\n    if (debug > 1) console.log(classNameV + ' props:', { className, id, body })\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.update(index, classNameV, id, body, { refresh: 'wait_for' })\n            .then((response) => {\n                if (!classes[className].subscribe) useData.invalidate({ className })\n                const jsonItem = convertOne(response)\n                if (debug > 1) console.log(classNameV + ' updated:', jsonItem)\n                if (debug > 0) console.timeEnd(classNameV + ' update time')\n                return jsonItem\n            })\n            .catch((error) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle update ' + classNameV + ': ' + error.message }))\n    )\n}\n\nexport default update"],"names":["node","noodleNode","setOutputs","isUpdating","inputs","updateItem","then","sendSignalOnOutput","update","className","id","body","debug","classes","Rolder","index","dbVersion","classNameV","classVersion","console","time","log","Kuzzle","connect","document","refresh","response","subscribe","invalidate","jsonItem","convertOne","timeEnd","catch","error","title","message"],"mappings":"yNAEA,W,oCAA8BA,C,4BAAf,eAAeA,EAAKC,CAAU,EACzCA,EAAWC,WAAW,CAAEC,WAAY,EAAK,GACzC,cAAOF,EAAWG,OAAOC,YACpBC,KAAK,KACFL,EAAWC,WAAW,CAAEC,WAAY,EAAM,GAC1CF,EAAWM,mBAAmB,cAClC,EACR,C,+GCiBA,W,oCAAA,C,0EArBA,IAAMC,EAAS,MAAO,CAAEC,UAAAA,CAAS,CAAEC,GAAAA,CAAE,CAAEC,KAAAA,CAAI,CAAE,IACzC,GAAM,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAO,CAAE,CAAGC,OACrBC,EAAQ,KAAAC,SAAA,IACRC,EAAa,KAAAC,YAAA,EAAaT,GAKhC,OAHIG,EAAQ,GAAGO,QAAQC,KAAKH,EAAa,gBACrCL,EAAQ,GAAGO,QAAQE,IAAIJ,EAAa,UAAW,CAAER,UAAAA,EAAWC,GAAAA,EAAIC,KAAAA,CAAK,GAElEW,OAAOC,UAAUjB,KAAK,IACzBgB,OAAOE,SAAShB,OAAOO,EAAOE,EAAYP,EAAIC,EAAM,CAAEc,QAAS,UAAW,GACrEnB,KAAK,AAACoB,IACC,CAACb,CAAO,CAACJ,EAAU,CAACkB,WAAW,UAAQC,WAAW,CAAEnB,UAAAA,CAAU,GAClE,IAAMoB,EAAW,KAAAC,UAAA,EAAWJ,GAG5B,OAFId,EAAQ,GAAGO,QAAQE,IAAIJ,EAAa,YAAaY,GACjDjB,EAAQ,GAAGO,QAAQY,QAAQd,EAAa,gBACrCY,CACX,GACCG,MAAM,AAACC,GAAU,cAAa,CAAEC,MAAO,oBAAqBC,QAAS,iBAAmBlB,EAAa,KAAOgB,EAAME,OAAQ,IAEvI,E,IAEA,EAAe3B,C"}