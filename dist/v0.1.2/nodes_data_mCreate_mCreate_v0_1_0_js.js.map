{"version":3,"file":"nodes_data_mCreate_mCreate_v0_1_0_js.js","sources":["./libs/kuzzle/v0.0.6/mCreate.js","./nodes/data/mCreate/mCreate_v0.1.0.js"],"sourcesContent":["import { convertOne } from './convert'\nimport ErrorHandler from '../../error-handler/v0.0.1/ErrorHandler'\nimport { classVersion, dbVersion } from '../../../utils/data/v.0.1.0/data'\nimport useData from '../../use-data/v0.1.0/use-data'\n\nconst mCreate = async ({ className, items }) => {\n    const { debug, classes } = Rolder\n\n    const index = dbVersion()\n    const classNameV = classVersion(className)\n\n    if (debug > 0) console.time(classNameV + ' mCreate time')\n    if (debug > 1) console.log(classNameV + ' props:', { className, body })\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.mCreate(index, classNameV, items, { refresh: 'wait_for' })\n            .then((response) => {\n                if (!classes[className].subscribe) useData.invalidate({ className })\n                const jsonItems = response.successes.map(k => convertOne(k))\n\n                if (response.errors.length > 0) ErrorHandler({\n                    title: 'Системная ошибка!',\n                    message: 'Kuzzle mCreate errors at class ' + classNameV + ': ' + JSON.stringify(response.errors)\n                })\n                if (debug > 1) console.log(classNameV + ' mCreated:', jsonItems)\n                if (debug > 0) console.timeEnd(classNameV + ' mCreate time')\n                return jsonItems\n            })\n            .catch((error) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle mCreate ' + classNameV + ': ' + error.message }))\n    )\n}\n\nexport default mCreate","import mCreate from '../../../libs/kuzzle/v0.0.6/mCreate'\n\nexport default async function node(noodleNode) {\n    noodleNode.setOutputs({ isCreating: true })\n    mCreate(noodleNode.inputs.createData)\n        .then((response) => {\n            noodleNode.setOutputs({ isCreating: false, createdItems: response })\n            noodleNode.sendSignalOnOutput('sendCreated')\n        })\n}"],"names":["mCreate","className","items","debug","classes","Rolder","index","dbVersion","classNameV","classVersion","console","time","log","body","Kuzzle","connect","then","document","refresh","response","subscribe","invalidate","jsonItems","successes","map","k","convertOne","errors","length","title","message","JSON","stringify","timeEnd","catch","error","node","noodleNode","setOutputs","isCreating","inputs","createData","createdItems","sendSignalOnOutput"],"mappings":"2NAgCA,W,oCAAA,C,0EA3BA,IAAMA,EAAU,MAAO,CAAEC,UAAAA,CAAS,CAAEC,MAAAA,CAAK,CAAE,IACvC,GAAM,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAO,CAAE,CAAGC,OAErBC,EAAQ,KAAAC,SAAA,IACRC,EAAa,KAAAC,YAAA,EAAaR,GAKhC,OAHIE,EAAQ,GAAGO,QAAQC,KAAKH,EAAa,iBACrCL,EAAQ,GAAGO,QAAQE,IAAIJ,EAAa,UAAW,CAAEP,UAAAA,EAAWY,IAAK,GAE9DC,OAAOC,UAAUC,KAAK,IACzBF,OAAOG,SAASjB,QAAQM,EAAOE,EAAYN,EAAO,CAAEgB,QAAS,UAAW,GACnEF,KAAK,AAACG,IACC,CAACf,CAAO,CAACH,EAAU,CAACmB,WAAW,UAAQC,WAAW,CAAEpB,UAAAA,CAAU,GAClE,IAAMqB,EAAYH,EAASI,UAAUC,IAAI,AAAAC,GAAK,KAAAC,UAAA,EAAWD,IAQzD,OANIN,EAASQ,OAAOC,OAAS,GAAG,cAAa,CACzCC,MAAO,oBACPC,QAAS,kCAAoCtB,EAAa,KAAOuB,KAAKC,UAAUb,EAASQ,OAC7F,GACIxB,EAAQ,GAAGO,QAAQE,IAAIJ,EAAa,aAAcc,GAClDnB,EAAQ,GAAGO,QAAQuB,QAAQzB,EAAa,iBACrCc,CACX,GACCY,MAAM,AAACC,GAAU,cAAa,CAAEN,MAAO,oBAAqBC,QAAS,kBAAoBtB,EAAa,KAAO2B,EAAML,OAAQ,IAExI,E,IAEA,EAAe9B,C,+GC9Bf,W,oCAA8BoC,C,4BAAf,eAAeA,EAAKC,CAAU,EACzCA,EAAWC,WAAW,CAAEC,WAAY,EAAK,GACzC,cAAQF,EAAWG,OAAOC,YACrBzB,KAAK,AAACG,IACHkB,EAAWC,WAAW,CAAEC,WAAY,GAAOG,aAAcvB,CAAS,GAClEkB,EAAWM,mBAAmB,cAClC,EACR,C"}