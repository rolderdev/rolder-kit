{"version":3,"file":"jsNodes_data_mCreate_v0_1_0_mCreate_ts.js","sources":["./jsNodes/data/mCreate/v0.1.0/mCreate.ts","./libs/kuzzle/v.0.1.0/mCreate.ts"],"sourcesContent":["import mCreate from \"../../../../libs/kuzzle/v.0.1.0/mCreate\"\n\nexport default async function node(noodleNode: any) {\n    noodleNode.setOutputs({ creating: true })\n    mCreate(noodleNode.inputs.createItems)\n        .then((response) => {\n            noodleNode.setOutputs({ creating: false, createdItems: response })\n            noodleNode.sendSignalOnOutput('created')\n        })\n}","import { convertKuzzleResponse, dbVersion, dbClassVersion } from '../../../utils/data/v0.2.0/data'\nimport ErrorHandler from '../../errorHandler/v0.1.0/ErrorHandler'\nimport useData from '../../useData/v0.2.0/useData'\n\nconst mCreate = async ({ dbClass, items }: { dbClass: string, items: any }) => {\n    const Kuzzle = window.Kuzzle\n    const { debug, dbClasses } = window.Rolder\n\n    const index = dbVersion()\n    const dbClassV = dbClassVersion(dbClass)\n\n    if (debug > 0) console.time(dbClassV + ' mCreate time')\n    if (debug > 1) console.log(dbClassV + ' props:', { dbClass, items })\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.mCreate(index, dbClassV, items, { refresh: 'wait_for' })\n            .then((response: any) => {\n                if (!dbClasses[dbClass].subscribe) useData.invalidate({ dbClass })\n                const jsonItems = response.successes.map((k: any) => convertKuzzleResponse(k))\n\n                if (response.errors.length > 0) ErrorHandler({\n                    title: 'Системная ошибка!',\n                    message: 'Kuzzle mCreate errors at class ' + dbClassV + ': ' + JSON.stringify(response.errors)\n                })\n                if (debug > 1) console.log(dbClassV + ' mCreated:', jsonItems)\n                if (debug > 0) console.timeEnd(dbClassV + ' mCreate time')\n                return jsonItems\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle mCreate ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default mCreate"],"names":["node","noodleNode","setOutputs","creating","inputs","createItems","then","response","createdItems","sendSignalOnOutput","mCreate","dbClass","items","Kuzzle","window","debug","dbClasses","Rolder","index","dbVersion","dbClassV","dbClassVersion","console","time","log","connect","document","refresh","subscribe","invalidate","jsonItems","successes","map","k","convertKuzzleResponse","errors","length","title","message","JSON","stringify","timeEnd","catch","error"],"mappings":"6NAEA,W,oCAA8BA,C,4BAAf,eAAeA,EAAKC,CAAe,EAC9CA,EAAWC,WAAW,CAAEC,SAAU,EAAK,GACvC,cAAQF,EAAWG,OAAOC,aACrBC,KAAK,AAACC,IACHN,EAAWC,WAAW,CAAEC,SAAU,GAAOK,aAAcD,CAAS,GAChEN,EAAWQ,mBAAmB,UAClC,EACR,C,+GCuBA,W,oCAAA,C,8DA5BA,IAAMC,EAAU,MAAO,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAK,CAAmC,IACtE,IAAMC,EAASC,OAAOD,OAChB,CAAEE,MAAAA,CAAK,CAAEC,UAAAA,CAAS,CAAE,CAAGF,OAAOG,OAE9BC,EAAQ,KAAAC,SAAA,IACRC,EAAW,KAAAC,cAAA,EAAeV,GAKhC,OAHII,EAAQ,GAAGO,QAAQC,KAAKH,EAAW,iBACnCL,EAAQ,GAAGO,QAAQE,IAAIJ,EAAW,UAAW,CAAET,QAAAA,EAASC,MAAAA,CAAM,GAE3DC,EAAOY,UAAUnB,KAAK,IACzBO,EAAOa,SAAShB,QAAQQ,EAAOE,EAAUR,EAAO,CAAEe,QAAS,UAAW,GACjErB,KAAK,AAACC,IACC,CAACS,CAAS,CAACL,EAAQ,CAACiB,WAAW,UAAQC,WAAW,CAAElB,QAAAA,CAAQ,GAChE,IAAMmB,EAAYvB,EAASwB,UAAUC,IAAI,AAACC,GAAW,KAAAC,qBAAA,EAAsBD,IAQ3E,OANI1B,EAAS4B,OAAOC,OAAS,GAAG,cAAa,CACzCC,MAAO,oBACPC,QAAS,kCAAoClB,EAAW,KAAOmB,KAAKC,UAAUjC,EAAS4B,OAC3F,GACIpB,EAAQ,GAAGO,QAAQE,IAAIJ,EAAW,aAAcU,GAChDf,EAAQ,GAAGO,QAAQmB,QAAQrB,EAAW,iBACnCU,CACX,GACCY,MAAM,AAACC,GAAe,cAAa,CAAEN,MAAO,oBAAqBC,QAAS,kBAAoBlB,EAAW,KAAOuB,EAAML,OAAQ,IAE3I,E,IAEA,EAAe5B,C"}