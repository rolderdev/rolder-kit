const signals = [
    { name: 'runQuery', group: 'Signals', type: 'signal', displayName: 'Run query' },
    { name: 'loaded', group: 'Signals', type: 'signal', displayName: 'Loaded' },
    { name: 'reload', group: 'Signals', type: 'signal', displayName: 'Reload' },
    { name: 'update', group: 'Signals', type: 'signal', displayName: 'Update' },
    { name: 'updated', group: 'Signals', type: 'signal', displayName: 'Updated' },
    { name: 'submited', group: 'Signals', type: 'signal', displayName: 'Submited' },
    { name: 'clicked', group: 'Signals', type: 'signal', displayName: 'Clicked' },
    { name: 'create', group: 'Signals', type: 'signal', displayName: 'Create' },
    { name: 'created', group: 'Signals', type: 'signal', displayName: 'Created' },
    { name: 'init', group: 'Signals', type: 'signal', displayName: 'Init' },
    { name: 'inited', group: 'Signals', type: 'signal', displayName: 'Inited' },
    { name: 'jwtValidationFailed', group: 'Signals', type: 'signal', displayName: 'JWT validation failed' },
    { name: 'jwtValidationSucceed', group: 'Signals', type: 'signal', displayName: 'JWT validation succeed' },
    { name: 'authenticated', group: 'Signals', type: 'signal', displayName: 'Authenticated' },
    { name: 'open', group: 'Signals', type: 'signal', displayName: 'Open' },
    { name: 'close', group: 'Signals', type: 'signal', displayName: 'Close' },
    { name: 'closed', group: 'Signals', type: 'signal', displayName: 'Closed' },
    { name: 'createXlsx', group: 'Signals', type: 'signal', displayName: 'Create XLSX' },
    { name: 'selected', group: 'Signals', type: 'signal', displayName: 'Selected' },
    { name: 'createValueSubmited', group: 'Signals', type: 'signal', displayName: 'Create value submited', dependsOn: [{ name: 'creatable', value: true }] },
    { name: 'resetSelected', group: 'Signals', type: 'signal', displayName: 'Reset selected' },
    { name: 'reseted', group: 'Signals', type: 'signal', displayName: 'Reseted' },
    { name: 'logout', group: 'Signals', type: 'signal', displayName: 'Logout' },
    { name: 'loggedOut', group: 'Signals', type: 'signal', displayName: 'Logged out' },
    { name: 'reset', group: 'Signals', type: 'signal', displayName: 'Reset' },
    { name: 'delete', group: 'Signals', type: 'signal', displayName: 'Delete' },
    { name: 'deleted', group: 'Signals', type: 'signal', displayName: 'Deleted' },
    { name: 'screenshoted', group: 'Signals', type: 'signal', displayName: 'Screenshoted' },
    { name: 'qrScanned', group: 'Signals', type: 'signal', displayName: 'Scanned' },
    { name: 'send', group: 'Signals', type: 'signal', displayName: 'Send' },
    { name: 'execute', group: 'Signals', type: 'signal', displayName: 'Execute' },
    { name: 'executed', group: 'Signals', type: 'signal', displayName: 'Executed' },
    { name: 'rejected', group: 'Signals', type: 'signal', displayName: 'Rejected' },
    { name: 'increment', group: 'Signals', type: 'signal', displayName: 'Increment' },
    { name: 'decrement', group: 'Signals', type: 'signal', displayName: 'Decrement' },
    { name: 'changed', group: 'Signals', type: 'signal', displayName: 'Changed' },
    { name: 'ganttTaskChanged', group: 'Signals', type: 'signal', displayName: 'Task changed' },
    { name: 'ganttExpandChanged', group: 'Signals', type: 'signal', displayName: 'Expand changed' },
    { name: 'ganttTaskDeleted', group: 'Signals', type: 'signal', displayName: 'Task deleted' },
    { name: 'ganttTaskProgressChanged', group: 'Signals', type: 'signal', displayName: 'Task progress changed' },
    { name: 'doubleClicked', group: 'Signals', type: 'signal', displayName: 'Double clicked' },
    { name: 'scroll', group: 'Signals', type: 'signal', displayName: 'Scroll' },
    { name: 'getItem', group: 'Signals', type: 'signal', displayName: 'Get item' },
    { name: 'getQrCode', group: 'Signals', type: 'signal', displayName: 'Get QR code' },
    { name: 'nextPage', group: 'Signals', type: 'signal', displayName: 'Next page' },
    { name: 'previousPage', group: 'Signals', type: 'signal', displayName: 'Previous page' },
    { name: 'saveAs', group: 'Signals', type: 'signal', displayName: 'Save as' },
] as const satisfies readonly NodePort[];

export default signals